#Python字典dict,使用键-值存储，具有极快的查找速度
d={'bobo':95,'lili':35,'yali':78}
print(d['bobo'])
d['lili']=89#修改key值
print(d['lili'])
print('wenjie' in d)#判断key值是否存在，结果为False
print(d.get('wenjie'))#也可以通过get函数判断key是否存在，可以返回none，也可以指定返回值
print(d.get('wenjie',-1))
print(d.pop('lili'))#删除关键字key用pop(key)的方法，对应的value也会删除
print(d)
#dict内部存放的顺序和key放入的顺序没有关系的，key必须是不可变对象
#set和dict类似，但不存储value，由于key不能重复，在set中没有重复的key
#要创建一个set，需要提供一个list作为输入集合
s=set([1,2,3])
print(s)
m=set([6,2,3,4,3,4,7])#重复元素在set中被自动过滤
print(m)
s.add(8)#add(key)添加元素到set中
print(s)
m.remove(6)#remove(key)方法删除元素
print(m)
#set可以看成无序和无重复元素的集合，因此两个set可以做交集和并集等操作
s1=set([1,2,3,4])
s2=set([4,5,6,2,1,7])
print(s1&s2)
print(s1|s2)
#set和dict的区别是没有存储对应的value值，都是不可以放入可变对象。
#对于可变对象，对list进行操作，list的内部的内容会发生变化的
a=['t','y','i','o']
a.sort()
print(a)
#对于不可变对象，比如str进行操作
b='abc'
print(b.replace('a','A'))#打印结果为Abc
print(b)#打印结果为Abc
c='abc'
d=c.replace('a','A')
print(d)
print(c)
#a是一个变量，'abc'才是字符串对象，a所指向的对象的内容才是'abc',调用replace没有改变字符串'abc'的内容，相反replace方法创建了一个新的字符串'Abc'并返回。

